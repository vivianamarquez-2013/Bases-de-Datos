---*---*--- NOTAS

CREATE TABLE MATERIA
( cod_materia number,
  nom_materia varchar2(30),
  PRIMARY KEY (cod_materia)
);

CREATE TABLE NOTA
( cod_materia number,
  cod_alumno number,
  val_nota number,
  PRIMARY KEY (cod_materia, cod_alumno)
);

CREATE TABLE ALUMNO
( cod_alumno number,
  nom_alumno varchar2(30),
  PRIMARY KEY (cod_alumno)
);

ALTER TABLE NOTA
  add CONSTRAINT cod_materia_fk
  FOREIGN KEY (cod_materia)
  REFERENCES MATERIA(cod_materia)
;

ALTER TABLE NOTA
  add CONSTRAINT cod_alumno_fk
  FOREIGN KEY (cod_alumno)
  REFERENCES ALUMNO(cod_alumno)
;

INSERT INTO MATERIA(cod_materia, nom_materia)
   VALUES(1, 'Bases de Datos I');
   
INSERT INTO MATERIA(cod_materia, nom_materia)
   VALUES(2, 'Bases de Datos II');
   
INSERT INTO MATERIA(cod_materia, nom_materia)
   VALUES(3, 'Bases de Datos III');
   
INSERT INTO ALUMNO(cod_alumno, nom_alumno)
   VALUES(1, 'Excelentín');

INSERT INTO ALUMNO(cod_alumno, nom_alumno)
   VALUES(2, 'Buenín');
   
INSERT INTO ALUMNO(cod_alumno, nom_alumno)
   VALUES(3, 'Tramposín');
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(1, 1, 5);
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(1, 2, 4);
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(2, 1, 5);
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(2, 2, 4);
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(2, 3, 3);
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(3, 1, 5);
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(3, 2, 4);
   
INSERT INTO NOTA(cod_materia, cod_alumno, val_nota)
   VALUES(3, 3, 3);

CREATE TABLE AUDI_NOTAS
( cod_materia number,
  cod_alumno number,
  nota_vieja number,
  nota_nueva number,
  fecha_delito date,
  ip_delito varchar2(30)
);

No debe tener llave porque puede ser que lo hagan muchas veces.

CREATE OR REPLACE TRIGGER AU_NOTA
  AFTER UPDATE ON NOTA 
  FOR EACH ROW
  BEGIN
    INSERT INTO AUDI_NOTAS VALUES (:NEW.cod_materia, :NEW.cod_alumno, :OLD.val_nota, :NEW.val_nota, sysdate, sys_context('USERENV', 'IP_ADDRESS'));
  END;
  
CREATE OR REPLACE TRIGGER BD_NOTA
  BEFORE DELETE ON NOTA 
  FOR EACH ROW
  BEGIN
    INSERT INTO AUDI_NOTAS VALUES (:OLD.cod_materia, :OLD.cod_alumno, :OLD.val_nota, NULL, sysdate, sys_context('USERENV', 'HOST'));
  END;
  
CREATE OR REPLACE TRIGGER AI_NOTA
  AFTER INSERT ON NOTA 
  FOR EACH ROW
  BEGIN
    INSERT INTO AUDI_NOTAS VALUES (:NEW.cod_materia, :NEW.cod_alumno, NULL, :NEW.val_nota, sysdate, sys_context('USERENV', 'IP_ADDRESS'));
  END;
  
CREATE OR REPLACE TRIGGER TT_NOTA
  BEFORE INSERT OR UPDATE OR DELETE ON NOTA 
  FOR EACH ROW
  BEGIN
    IF INSERTING THEN 
      INSERT INTO AUDI_NOTAS VALUES (:NEW.cod_materia, :NEW.cod_alumno, NULL, :NEW.val_nota, sysdate, sys_context('USERENV', 'IP_ADDRESS'));
    END IF;  
    IF DELETING THEN
      INSERT INTO AUDI_NOTAS VALUES (:OLD.cod_materia, :OLD.cod_alumno, :OLD.val_nota, NULL, sysdate, sys_context('USERENV', 'IP_ADDRESS'));
    END IF;
    IF UPDATING THEN
      INSERT INTO AUDI_NOTAS VALUES (:NEW.cod_materia, :NEW.cod_alumno, :OLD.val_nota, :NEW.val_nota, sysdate, sys_context('USERENV', 'IP_ADDRESS'));
    END IF;
  END;


