create or replace TRIGGER AI_MOVIMIENTO
  AFTER INSERT ON MOVIMIENTO
  FOR EACH ROW
  BEGIN
    IF (:NEW.cod_t_movimiento = 1) THEN
      UPDATE CUENTA
        SET sal_cuenta = :NEW.val_movimiento + sal_cuenta
        WHERE CUENTA.cod_cuenta = :NEW.cod_cuenta;
    END IF; 
  END;
  
------------------------- ORACLE

CREATE TABLE CUENTA
( cod_cuenta number,
  nom_cuenta varchar2(30),
  sal_cuenta number,
  PRIMARY KEY (cod_cuenta)
);

CREATE TABLE MOVIMIENTO
( cod_movimiento number,
  cod_cuenta number,
  cod_t_movimiento number,
  fecha_movimiento date,
  val_movimiento number,
  PRIMARY KEY (cod_movimiento)
);

CREATE TABLE T_MOVIMIENTO
( cod_t_movimiento number,
  nom_t_movimiento varchar2(30),
  PRIMARY KEY (cod_t_movimiento)
);

ALTER TABLE MOVIMIENTO
  add CONSTRAINT cod_cuenta_fk
  FOREIGN KEY (cod_cuenta)
  REFERENCES CUENTA(cod_cuenta)
;

ALTER TABLE MOVIMIENTO
  add CONSTRAINT cod_t_movimiento_fk
  FOREIGN KEY (cod_t_movimiento)
  REFERENCES T_MOVIMIENTO(cod_t_movimiento)
;

INSERT INTO CUENTA VALUES(1, 'Paola', 0);

INSERT INTO CUENTA VALUES(2, 'Carolina', 0);

INSERT INTO CUENTA VALUES(3, 'Jessica', 0);

INSERT INTO CUENTA VALUES(4, 'Laura', 0);

INSERT INTO T_MOVIMIENTO VALUES(1, 'Consignación');

INSERT INTO T_MOVIMIENTO VALUES(2, 'Retiro');

INSERT INTO T_MOVIMIENTO VALUES(3, 'Consultar');

SELECT * FROM MOVIMIENTO;

SELECT * FROM T_MOVIMIENTO;

SELECT * FROM CUENTA;

SELECT * FROM T_MOVIMIENTO;
CREATE OR REPLACE TRIGGER AI_MOVIMIENTO
  AFTER INSERT ON MOVIMIENTO
  FOR EACH ROW
  DECLARE
      NAME CUENTA.nom_cuenta%type;
      SALDO CUENTA.sal_cuenta%type;
  BEGIN
    SELECT sal_cuenta INTO saldo FROM cuenta WHERE CUENTA.cod_cuenta=:NEW.cod_cuenta;
    SELECT nom_cuenta INTO name FROM cuenta WHERE CUENTA.cod_cuenta=:NEW.cod_cuenta;
  
  /*Consignación*/ 
  IF (:NEW.cod_t_movimiento=1) THEN
    UPDATE CUENTA
      SET sal_cuenta= saldo + :NEW.val_movimiento WHERE CUENTA.cod_cuenta = :NEW.cod_cuenta;
        imprimir (NAME||' --> CONSIGNACIÓN --> '||:NEW.val_movimiento||' --> SALDO --> '||(saldo + :NEW.val_movimiento));
  END IF;

  /*Retiro*/
  IF (:NEW.cod_t_movimiento=2) THEN
    IF (SALDO < :NEW.val_movimiento) THEN
      imprimir ('¡SALDO INSUFICIENTE!');     
    ELSE
      UPDATE CUENTA
        SET sal_cuenta= saldo - :NEW.val_movimiento WHERE Cuenta.cod_cuenta = :NEW.cod_cuenta;
          imprimir (NAME||' --> RETIRO --> '||:NEW.val_movimiento||' --> SALDO --> '||(saldo - :NEW.val_movimiento));
    END IF;
  END IF;
  
  /*Consulta*/
  IF (:NEW.cod_t_movimiento=3) THEN
    imprimir (NAME||' --> SALDO --> '||SALDO);
  END IF;
 
END;

INSERT INTO MOVIMIENTO VALUES(6, 1, 3, sysdate, 500);

------------------------- POSTGRE




