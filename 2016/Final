• Creación de tablas y fk

CREATE TABLE prestamo
( cod_prestamo number,
  cod_libro number,
  cod_estudiante number,
  cod_modalidad number,
  fecha_prestamo date,
  fecha_entrega date,
  PRIMARY KEY (cod_prestamo)
);

ALTER TABLE prestamo
  add CONSTRAINT cod_libro_fk
  FOREIGN KEY (cod_libro)
  REFERENCES libro(cod_libro)
;

ALTER TABLE prestamo
  add CONSTRAINT cod_estudiante_fk
  FOREIGN KEY (cod_estudiante)
  REFERENCES estudiante(cod_estudiante)
;

ALTER TABLE prestamo
  add CONSTRAINT cod_modalidad_fk
  FOREIGN KEY (cod_modalidad)
  REFERENCES modalidad(cod_modalidad)
;

CREATE TABLE registro
( cod_registro number,
  cantidad_disp number,
  cod_libro number,
  PRIMARY KEY (cod_registro)
);

ALTER TABLE registro
  add CONSTRAINT cod_libro_fk2
  FOREIGN KEY (cod_libro)
  REFERENCES libro(cod_libro)
;

CREATE TABLE modalidad
( cod_modalidad number,
  nom_modalidad varchar2(30),
  PRIMARY KEY (cod_modalidad)
);

CREATE TABLE estudiante
( cod_estudiante number,
  nom_estudiante varchar2(30),
  cod_carrera number,
  cod_record number,
  PRIMARY KEY (cod_estudiante)
);

ALTER TABLE estudiante
  add CONSTRAINT cod_carrera_fk
  FOREIGN KEY (cod_carrera)
  REFERENCES carrera(cod_carrera)
;

CREATE TABLE carrera
( cod_carrera number,
  nom_carrera varchar2(30),
  PRIMARY KEY (cod_carrera)
);

CREATE TABLE editorial
( cod_editorial number,
  nom_editorial varchar2(30),
  PRIMARY KEY (cod_editorial)
);

CREATE TABLE idioma
( cod_idioma number,
  nom_idioma varchar2(30),
  PRIMARY KEY (cod_idioma)
);

CREATE TABLE genero
( cod_genero number,
  nom_genero varchar2(30),
  PRIMARY KEY (cod_genero)
);

CREATE TABLE autor
( cod_autor number,
  nom_autor varchar2(30),
  PRIMARY KEY (cod_autor)
);

CREATE TABLE libro
( cod_libro number,
  nom_libro varchar2(30),
  cod_autor number,
  cod_genero number,
  cod_idioma number,
  cod_editorial number,
  cod_prestamo number,
  cod_registro number,
  PRIMARY KEY (cod_libro)
);

ALTER TABLE libro
  add CONSTRAINT cod_autor_fk
  FOREIGN KEY (cod_autor)
  REFERENCES autor(cod_autor)
;

ALTER TABLE libro
  add CONSTRAINT cod_genero_fk
  FOREIGN KEY (cod_genero)
  REFERENCES genero(cod_genero)
;

ALTER TABLE libro
  add CONSTRAINT cod_idioma_fk
  FOREIGN KEY (cod_idioma)
  REFERENCES idioma(cod_idioma)
;

ALTER TABLE libro
  add CONSTRAINT cod_editorial_fk
  FOREIGN KEY (cod_editorial)
  REFERENCES editorial(cod_editorial)
;

ALTER TABLE libro
  add CONSTRAINT cod_prestamo_fk
  FOREIGN KEY (cod_prestamo)
  REFERENCES prestamo(cod_prestamo)
;

ALTER TABLE libro
  add CONSTRAINT cod_registro_fk
  FOREIGN KEY (cod_registro)
  REFERENCES registro(cod_registro)
;



• Auditadas

CREATE TABLE AUDI_PRESTAMO
( cod_prestamo number,
  cod_libro number,
  cod_estudiante number,
  cod_modalidad number,
  fecha_prestamo date,
  fecha_entrega date,
  fecha_cambio date,
  esquema_cambio varchar2(100),
  ip_cambio varchar2(30),
  tipo_cambio varchar2(30)
);

create or replace TRIGGER AU_PRESTAMO
  BEFORE INSERT OR UPDATE OR DELETE ON PRESTAMO 
  FOR EACH ROW
  BEGIN
    IF INSERTING THEN 
      INSERT INTO AUDI_PRESTAMO VALUES (:NEW.cod_prestamo, :NEW.cod_libro, :NEW.cod_estudiante, :NEW.cod_modalidad, :NEW.fecha_prestamo, :NEW.fecha_entrega, sysdate,  sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'INSERT');
    END IF;  
    IF DELETING THEN
      INSERT INTO AUDI_PRESTAMO VALUES (:OLD.cod_prestamo, :OLD.cod_libro, :OLD.cod_estudiante, :OLD.cod_modalidad, :OLD.fecha_prestamo, :OLD.fecha_entrega, sysdate,  sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'DELETE');
    END IF;
    IF UPDATING THEN
      INSERT INTO AUDI_PRESTAMO VALUES (:OLD.cod_prestamo, :OLD.cod_libro, :OLD.cod_estudiante, :OLD.cod_modalidad, :OLD.fecha_prestamo, :OLD.fecha_entrega, sysdate,  sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'UPDATE');
    END IF;
  END;

CREATE TABLE AUDI_ESTUDIANTE
( cod_estudiante number,
  nom_estudiante varchar2(30),
  cod_carrera number,
  cod_carrera_nuevo number,
  cod_record number,
  cod_record_nuevo number,
  fecha_cambio date,
  esquema_cambio varchar2(100),
  ip_cambio varchar2(30),
  tipo_cambio varchar2(30)
);

create or replace TRIGGER AU_ESTUDIANTE
  BEFORE INSERT OR UPDATE OR DELETE ON ESTUDIANTE 
  FOR EACH ROW
  BEGIN
    IF INSERTING THEN 
      INSERT INTO AUDI_ESTUDIANTE VALUES (:NEW.cod_estudiante, :NEW.nom_estudiante, :NEW.cod_carrera, NULL, :NEW.cod_record, NULL, sysdate, sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'INSERT');
    END IF;  
    IF DELETING THEN
      INSERT INTO AUDI_ESTUDIANTE VALUES (:OLD.cod_estudiante, :OLD.nom_estudiante, :OLD.cod_carrera, NULL, :OLD.cod_record, NULL, sysdate, sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'INSERT');
    END IF;
    IF UPDATING THEN
      INSERT INTO AUDI_ESTUDIANTE VALUES (:OLD.cod_estudiante, :OLD.nom_estudiante, :OLD.cod_carrera, :NEW.cod_carrera, :OLD.cod_record, :NEW.cod_record, sysdate, sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'INSERT');
    END IF;
  END;

CREATE TABLE AUDI_LIBRO
( cod_libro number,
  nom_libro varchar2(30),
  cod_registro number,
  cod_registro_nuevo number,
  fecha_cambio date,
  esquema_cambio varchar2(100),
  ip_cambio varchar2(30),
  tipo_cambio varchar2(30)
);

create or replace TRIGGER AU_LIBRO
  BEFORE INSERT OR UPDATE OR DELETE ON LIBRO
  FOR EACH ROW
  BEGIN
    IF INSERTING THEN 
      INSERT INTO AUDI_LIBRO VALUES (:NEW.cod_libro, :NEW.nom_libro, :NEW.cod_registro, NULL, sysdate, sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'INSERT');
    END IF;  
    IF DELETING THEN
      INSERT INTO AUDI_LIBRO VALUES (:OLD.cod_libro, :OLD.nom_libro, :OLD.cod_registro, NULL, sysdate, sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'INSERT');
    END IF;
    IF UPDATING THEN
      INSERT INTO AUDI_LIBRO VALUES (:OLD.cod_libro, :OLD.nom_libro, :OLD.cod_registro, :NEW.cod_registro, sysdate, sys_context('USERENV', 'CURRENT_SCHEMA'),sys_context('USERENV', 'IP_ADDRESS'), 'INSERT');
    END IF;
  END;
  
CREATE sequence "REGISTRO_SEQ" 

CREATE trigger "BI_REGISTRO"  
  before insert on "REGISTRO"              
  for each row 
begin  
  if :NEW."COD_REGISTRO" is null then
    select "REGISTRO_SEQ".nextval into :NEW."COD_REGISTRO" from sys.dual;
  end if;
end;

CREATE sequence "LIBRO_PREST_SEQ" 

CREATE trigger "BI_LIBRO2"  
  before insert on "LIBRO"              
  for each row 
begin  
  if :NEW."COD_PRESTAMO" is null then
    select "LIBRO_PREST_SEQ".nextval into :NEW."COD_PRESTAMO" from sys.dual;
  end if;
end;

CREATE SEQUENCE ESTUDIANTE_SEQ
  START WITH 614161001
  INCREMENT BY 1
  ORDER
  NOCACHE;
  
CREATE trigger "BI_ESTUDIANTE"  
  before insert on "ESTUDIANTE"              
  for each row 
begin  
  if :NEW."COD_ESTUDIANTE" is null then
    select "ESTUDIANTE_SEQ".nextval into :NEW."COD_ESTUDIANTE" from sys.dual;
  end if;
end;



• Insert 

BEGIN

INSERT INTO EDITORIAL VALUES(1, 'DE BOLSILLO');
INSERT INTO EDITORIAL VALUES(2, 'OVEJA NEGRA');
INSERT INTO EDITORIAL VALUES(3, 'NORMA');

END;


BEGIN

INSERT INTO IDIOMA VALUES(1, 'ESPAÑOL');
INSERT INTO IDIOMA VALUES(2, 'INGLÉS');
INSERT INTO IDIOMA VALUES(3, 'PORTUGUÉS');
INSERT INTO IDIOMA VALUES(4, 'RUSO');

END;


BEGIN

INSERT INTO GENERO VALUES(1, 'NOVELA');
INSERT INTO GENERO VALUES(2, 'ACADÉMICO');
INSERT INTO GENERO VALUES(3, 'CRÓNICA');

END;


BEGIN

INSERT INTO AUTOR VALUES(1, 'EUCLIDES');
INSERT INTO AUTOR VALUES(2, 'SVETLANA ALIEXVICH');
INSERT INTO AUTOR VALUES(3, 'GABRIEL GARCÍA MÁRQUEZ');
INSERT INTO AUTOR VALUES(4, 'PAOLO GIORDANO');

END;


BEGIN

INSERT INTO MODALIDAD VALUES(1, 'PRESTAMO');
INSERT INTO MODALIDAD VALUES(2, 'ENTREGA');

END;



BEGIN

INSERT INTO CARRERA VALUES(1, 'Matemáticas');
INSERT INTO CARRERA VALUES(2, 'Ingeniería de Sistemas');
INSERT INTO CARRERA VALUES(3, 'Psicología');

END;


BEGIN

INSERT INTO ESTUDIANTE VALUES(NULL, 'Viviana Márquez', 1, 0);
INSERT INTO ESTUDIANTE VALUES(NULL, 'Alejandra Torres', 1, 0);
INSERT INTO ESTUDIANTE VALUES(NULL, 'Jersson Rodríguez', 1, 0);
INSERT INTO ESTUDIANTE VALUES(NULL, 'David Criollo', 2, 0);
INSERT INTO ESTUDIANTE VALUES(NULL, 'Sebastián Cuadros', 2, 0);
INSERT INTO ESTUDIANTE VALUES(NULL, 'Camilo Castellanos', 2, 0);
INSERT INTO ESTUDIANTE VALUES(NULL, 'Tatiana Calderón', 3, 0);
INSERT INTO ESTUDIANTE VALUES(NULL, 'Estebán Mendoza', 3, 0);

END;

