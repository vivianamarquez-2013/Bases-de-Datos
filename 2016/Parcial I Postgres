CREATE TABLE  AUTOR 
   (	"COD_AUTOR" NUMERIC, 
	"NOM_AUTOR" TEXT, 
	 CONSTRAINT "AUTOR_PK" PRIMARY KEY ("COD_AUTOR")  
   );
CREATE TABLE  CIUDAD
   (	"COD_CIUDAD" NUMERIC, 
	"NOM_CIUDAD" TEXT, 
	 CONSTRAINT "CIUDAD_PK" PRIMARY KEY ("COD_CIUDAD")  
   )
;
CREATE TABLE  LIBRO 
   (	"COD_LIBRO" NUMERIC, 
	"NOM_LIBRO" TEXT, 
	"COD_AUTOR" NUMERIC, 
	 CONSTRAINT "LIBRO_PK" PRIMARY KEY ("COD_LIBRO")  , 
	 CONSTRAINT "LIBRO_FK" FOREIGN KEY ("COD_AUTOR")
	 REFERENCES  AUTOR ("COD_AUTOR")  
   )
;
CREATE TABLE  USUARIO
   (	"COD_USUARIO" NUMERIC, 
	"NOM_USUARIO" TEXT, 
	"COD_CIUDAD" NUMERIC, 
	 CONSTRAINT "USUARIO_PK" PRIMARY KEY ("COD_USUARIO")  , 
	 CONSTRAINT "USUARIO_FK" FOREIGN KEY ("COD_CIUDAD")
	  REFERENCES  CIUDAD ("COD_CIUDAD")  
   )
;
CREATE TABLE  PRESTAMO
   (	"COD_PRESTAMO" NUMERIC, 
	"COD_USUARIO" NUMERIC, 
	"COD_LIBRO" NUMERIC, 
	 CONSTRAINT "PRESTAMO_PK" PRIMARY KEY ("COD_PRESTAMO")  , 
	 CONSTRAINT "PRESTAMO_FK" FOREIGN KEY ("COD_USUARIO")
	  REFERENCES  USUARIO ("COD_USUARIO")  , 
	 CONSTRAINT "PRESTAMO_FK2" FOREIGN KEY ("COD_LIBRO")
	  REFERENCES  LIBRO ("COD_LIBRO")  
   )
;


BEGIN

insert into AUTOR values(1,'Taylor');
insert into AUTOR values(2,'Spevak');
insert into AUTOR values(3,'Swokowsky');
insert into AUTOR values(4,'Alvarenga');
insert into AUTOR values(5,'Thomas');

insert into LIBRO values(1,'Calculo Integral',1);
insert into LIBRO values(2,'Calculo Diferencial',1);
insert into LIBRO values(3,'Calculo En varias vriables',1);                                    
insert into LIBRO values(4,'Fisica atomica',4);
insert into LIBRO values(5,'Fisica cuantica',4);
insert into LIBRO values(6,'Fisica nuclear',4);
insert into LIBRO values(7,'Matematicas especiales I',2);
insert into LIBRO values(8,'Matematicas especiales II',2);
insert into LIBRO values(9,'Calculo Integral',2);
insert into LIBRO values(10,'Teoria de conjuntos',3);
insert into LIBRO values(11,'Teoria de numeros',3);
insert into LIBRO values(12,'Teoria de bases de datos',5);

insert into ciudad values(1,'Bogota');
insert into ciudad values(2,'Medellin');
insert into ciudad values(3,'Cali');
insert into ciudad values(4,'Barranquilla');

insert into usuario values(1,'sandra',1);
insert into usuario values(2,'claudia',1);
insert into usuario values(3,'patricia',2);
insert into usuario values(4,'verenice',2);
insert into usuario values(5,'yolanda',3);
insert into usuario values(6,'monica',4);
insert into usuario values(7,'carolina',4);
insert into usuario values(8,'vanesa',4);
insert into usuario values(9,'pedro',3);
insert into usuario values(10,'luis',3);
insert into usuario values(11,'andres',1);
insert into usuario values(12,'angel',2);
insert into usuario values(13,'angela',3);

insert into prestamo values(1,1,1);
insert into prestamo values(2,2,2);
insert into prestamo values(3,3,3);
insert into prestamo values(4,1,4);
insert into prestamo values(5,2,5);
insert into prestamo values(6,3,6);
insert into prestamo values(7,5,7);
insert into prestamo values(8,5,8);
insert into prestamo values(9,6,1);
insert into prestamo values(10,6,1);
insert into prestamo values(11,7,2);
insert into prestamo values(12,8,4);
insert into prestamo values(13,9,6);
insert into prestamo values(14,9,8);
insert into prestamo values(15,9,10);
insert into prestamo values(16,10,10);
insert into prestamo values(17,10,9);
insert into prestamo values(18,11,9);
insert into prestamo values(19,12,7);
insert into prestamo values(20,13,4);
insert into prestamo values(21,9,3);
insert into prestamo values(22,9,2);
insert into prestamo values(23,10,5);
insert into prestamo values(24,10,5);
insert into prestamo values(25,11,4);
insert into prestamo values(26,12,3);
insert into prestamo values(27,13,2);

END;


CREATE OR REPLACE FUNCTION LXC() RETURNS void AS $$
DECLARE
      CURSOR_LXC CURSOR IS
        SELECT
          nom_ciudad, count(cod_prestamo)  NO_LIBROS_PRESTADOS
        FROM
          PRESTAMO, USUARIO, CIUDAD
        WHERE
          PRESTAMO.cod_usuario=USUARIO.cod_usuario AND
          USUARIO.cod_ciudad=CIUDAD.cod_ciudad     
        GROUP BY nom_ciudad;
      registro RECORD;
      BEGIN
        FOR registro in CURSOR_lxc LOOP
          RAISE NOTICE '% --> %', REGISTRO.NOM_CIUDAD, RREGISTRO.NOMBRE_CIUDAD;
        END LOOP;
     END;
 $$ LANGUAGE plpgsql;

SELECT LXC();


