SQL SERVER

---*---*--- Ingresar Datos

CREATE TABLE factura
( cod_factura numeric,
  cod_cliente numeric,
  val_factura numeric,
  PRIMARY KEY (cod_factura)
);

CREATE TABLE VENDEDOR
( cod_vendedor numeric,
  nom_vendedor VARCHAR(30),
  PRIMARY KEY (cod_vendedor)
);

CREATE TABLE CIUDAD
( cod_ciudad numeric,
  nom_ciudad VARCHAR(30),
  PRIMARY KEY (cod_ciudad)
);

CREATE TABLE F_PAGO
( cod_f_pago numeric,
  nom_f_pago VARCHAR(30),
  PRIMARY KEY (cod_f_pago)
);

CREATE TABLE CLIENTE
( cod_cliente numeric,
  nom_cliente VARCHAR(30),
  cod_vendedor numeric,
  cod_ciudad numeric,
  cod_f_pago numeric,
  PRIMARY KEY (cod_cliente)
);

ALTER TABLE FACTURA
  add CONSTRAINT cod_cliente_fk
  FOREIGN KEY (cod_cliente)
  REFERENCES CLIENTE(cod_cliente)
;

ALTER TABLE CLIENTE
  add CONSTRAINT cod_vendedor_fk
  FOREIGN KEY (cod_vendedor)
  REFERENCES VENDEDOR(cod_vendedor)
;

ALTER TABLE CLIENTE
  add CONSTRAINT cod_ciudad_fk
  FOREIGN KEY (cod_ciudad)
  REFERENCES CIUDAD(cod_ciudad)
;

ALTER TABLE CLIENTE
  add CONSTRAINT cod_f_pago_fk
  FOREIGN KEY (cod_f_pago)
  REFERENCES F_PAGO(cod_f_pago)
;

INSERT INTO VENDEDOR (cod_vendedor, nom_vendedor)
   VALUES(1,'Sandra');

INSERT INTO VENDEDOR (cod_vendedor, nom_vendedor)
   VALUES(2,'Claudia');

INSERT INTO VENDEDOR (cod_vendedor, nom_vendedor)
   VALUES(3,'Yamyle');
   
INSERT INTO CIUDAD (cod_ciudad, nom_ciudad)
   VALUES(1,'Bogotá');

INSERT INTO CIUDAD (cod_ciudad, nom_ciudad)
   VALUES(2,'Medellín');

INSERT INTO CIUDAD (cod_ciudad, nom_ciudad)
   VALUES(3,'Calí');
   
INSERT INTO F_PAGO (cod_f_pago, nom_f_pago)
   VALUES(1,'Crédito');

INSERT INTO F_PAGO (cod_f_pago, nom_f_pago)
   VALUES(2,'Contado');

INSERT INTO CLIENTE (cod_cliente, nom_cliente, cod_vendedor, cod_ciudad, cod_f_pago)
   VALUES(1,'Juan',1,3,1);

INSERT INTO CLIENTE (cod_cliente, nom_cliente, cod_vendedor, cod_ciudad, cod_f_pago)
   VALUES(2,'José',2,3,2);

INSERT INTO CLIENTE (cod_cliente, nom_cliente, cod_vendedor, cod_ciudad, cod_f_pago)
   VALUES(3,'Julio',3,2,1);

INSERT INTO CLIENTE (cod_cliente, nom_cliente, cod_vendedor, cod_ciudad, cod_f_pago)
   VALUES(4,'Jaime',2,2,1);

INSERT INTO CLIENTE (cod_cliente, nom_cliente, cod_vendedor, cod_ciudad, cod_f_pago)
   VALUES(5,'Jairo',1,1,2);
   
INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(1,1,1000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(2,2,2000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(3,3,3000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(4,4,4000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(5,5,5000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(6,1,1000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(7,2,2000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(8,3,3000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(9,4,4000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(10,5,5000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(11,1,1000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(12,2,2000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(13,3,3000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(14,4,4000);

INSERT INTO FACTURA(cod_factura, cod_cliente, val_factura)
   VALUES(15,5,5000);
   
   
   
   
---*---*--- Funciones

-----Ventas por vendedor WHILE

CREATE PROCEDURE VXV
AS
BEGIN
	DECLARE @nombre VARCHAR(30);
	DECLARE @totalVentas NUMERIC(20, 0);

	DECLARE CURSOR_VXV CURSOR
	FOR
		SELECT
			nom_vendedor, sum(val_factura)
        FROM 
		    VENDEDOR, CLIENTE, FACTURA
        WHERE
             VENDEDOR.cod_vendedor=CLIENTE.cod_vendedor AND
             CLIENTE.cod_cliente=FACTURA.cod_cliente
        GROUP BY ROLLUP (nom_vendedor);

		OPEN CURSOR_VXV;

		FETCH NEXT FROM CURSOR_VXV INTO @nombre, @totalVentas
		WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT @nombre + ' --- ' + CONVERT(VARCHAR(30), @totalVentas);
			FETCH NEXT FROM CURSOR_VXV INTO @nombre, @totalVentas;
		END;

	CLOSE CURSOR_VXV;
	DEALLOCATE CURSOR_VXV;
END;

EXECUTE VXV;

-----Ventas por ciudad WHILE

CREATE PROCEDURE VXC
AS
BEGIN
	DECLARE @nombre VARCHAR(30);
	DECLARE @totalVentas NUMERIC(20, 0);

	DECLARE CURSOR_VXC CURSOR
	FOR
		SELECT
			nom_ciudad, sum(val_factura)
        FROM 
		    CIUDAD, CLIENTE, FACTURA
        WHERE
             CIUDAD.cod_ciudad=CLIENTE.cod_ciudad AND
             CLIENTE.cod_cliente=FACTURA.cod_cliente
        GROUP BY ROLLUP (nom_ciudad);

		OPEN CURSOR_VXC;

		FETCH NEXT FROM CURSOR_VXC INTO @nombre, @totalVentas
		WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT @nombre + ' --- ' + CONVERT(VARCHAR(30), @totalVentas);
			FETCH NEXT FROM CURSOR_VXC INTO @nombre, @totalVentas;
		END;

	CLOSE CURSOR_VXC;
	DEALLOCATE CURSOR_VXC;
END;

EXECUTE VXC;

-----Ventas por forma de pago WHILE

CREATE PROCEDURE VXFP
AS
BEGIN
	DECLARE @nombre VARCHAR(30);
	DECLARE @totalVentas NUMERIC(20, 0);

	DECLARE CURSOR_VXFP CURSOR
	FOR
		SELECT
			nom_f_pago, sum(val_factura)
        FROM 
		    F_PAGO, CLIENTE, FACTURA
        WHERE
            F_PAGO.cod_f_pago=CLIENTE.cod_f_pago AND
			CLIENTE.cod_cliente=FACTURA.cod_cliente
        GROUP BY ROLLUP (nom_f_pago);

		OPEN CURSOR_VXFP;

		FETCH NEXT FROM CURSOR_VXFP INTO @nombre, @totalVentas
		WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT @nombre + ' --- ' + CONVERT(VARCHAR(30), @totalVentas);
			FETCH NEXT FROM CURSOR_VXFP INTO @nombre, @totalVentas;
		END;

	CLOSE CURSOR_VXFP;
	DEALLOCATE CURSOR_VXFP;
END;

EXECUTE VXFP;

-----Ventas por vendedor FOR (Forma de pago dada)
(No existe FOR en SQL Server, se simula con WHILE)

CREATE PROCEDURE VXVXFP
AS
BEGIN
	DECLARE @nombre VARCHAR(30);
	DECLARE @nombre_v VARCHAR(30);
	DECLARE @totalVentas NUMERIC(20, 0);

	DECLARE CURSOR_VXVXFP CURSOR
	FOR
		SELECT
			nom_f_pago, nom_vendedor, sum(val_factura)
        FROM 
		    F_PAGO, CLIENTE, FACTURA, VENDEDOR
        WHERE
			F_PAGO.cod_f_pago = CLIENTE.cod_f_pago AND
			CLIENTE.cod_cliente = FACTURA.cod_cliente AND
			VENDEDOR.cod_vendedor = CLIENTE.cod_vendedor
        GROUP BY nom_vendedor, nom_f_pago;

		OPEN CURSOR_VXVXFP;

		FETCH NEXT FROM CURSOR_VXVXFP INTO @nombre_v, @nombre, @totalVentas
		WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT @nombre_v + ' --- ' + @nombre + ' --- ' + CONVERT(VARCHAR(30), @totalVentas);
			FETCH NEXT FROM CURSOR_VXVXFP INTO @nombre_v, @nombre, @totalVentas;
		END;

	CLOSE CURSOR_VXVXFP;
	DEALLOCATE CURSOR_VXVXFP;
END;

EXECUTE VXVXFP;


-----Ventas por vendedor WHILE (Forma de pago dada)

CREATE PROCEDURE VXVXFPD (@input NUMERIC)
AS
BEGIN
	DECLARE @nombre VARCHAR(30);
	DECLARE @nombre_v VARCHAR(30);
	DECLARE @totalVentas NUMERIC(20, 0);

	DECLARE CURSOR_VXVXFPD CURSOR
	FOR
		SELECT
			nom_f_pago, nom_vendedor, sum(val_factura)
        FROM 
		    F_PAGO, CLIENTE, FACTURA, VENDEDOR
        WHERE
			F_PAGO.cod_f_pago = CLIENTE.cod_f_pago AND
			CLIENTE.cod_cliente = FACTURA.cod_cliente AND
			VENDEDOR.cod_vendedor = CLIENTE.cod_vendedor AND
			F_PAGO.cod_f_pago = @input
        GROUP BY nom_vendedor, nom_f_pago;

		OPEN CURSOR_VXVXFPD;

		FETCH NEXT FROM CURSOR_VXVXFPD INTO @nombre_v, @nombre, @totalVentas
		WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT @nombre_v + ' --- ' + @nombre + ' --- ' + CONVERT(VARCHAR(30), @totalVentas);
			FETCH NEXT FROM CURSOR_VXVXFPD INTO @nombre_v, @nombre, @totalVentas;
		END;

	CLOSE CURSOR_VXVXFPD;
	DEALLOCATE CURSOR_VXVXFPD;
END;

EXECUTE VXVXFPD @input=1;
